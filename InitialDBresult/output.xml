<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on win32)" generated="20190709 13:21:04.953" rpa="false">
<suite id="s1" name="PyRobotTesting" source="C:\Users\Konstantin\PycharmProjects\PyRobotTesting\PyRobotTesting.robot">
<test id="s1-t1" name="MyTestCase">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1</arg>
</arguments>
<msg timestamp="20190709 13:21:05.543" level="INFO">Step 1</msg>
<status status="PASS" starttime="20190709 13:21:05.541" endtime="20190709 13:21:05.543"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<arguments>
<arg>sqlite3</arg>
<arg>database='C:/Users/Konstantin/PyRobotApp/testing-master/web/clients.db', isolation_level=None</arg>
</arguments>
<msg timestamp="20190709 13:21:05.580" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='C:/Users/Konstantin/PyRobotApp/testing-master/web/clients.db', isolation_level=None)) </msg>
<status status="PASS" starttime="20190709 13:21:05.544" endtime="20190709 13:21:05.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2</arg>
</arguments>
<msg timestamp="20190709 13:21:05.586" level="INFO">Step 2</msg>
<status status="PASS" starttime="20190709 13:21:05.586" endtime="20190709 13:21:05.587"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>SELECT CLIENTS.CLIENT_ID FROM CLIENTS JOIN BALANCES ON CLIENTS.CLIENT_ID=BALANCES.CLIENTS_CLIENT_ID WHERE BALANCES.BALANCE&gt;0 ORDER BY BALANCES.BALANCE DESC LIMIT 1;</arg>
</arguments>
<assign>
<var>@{client_id_with_positive_balance}</var>
</assign>
<msg timestamp="20190709 13:21:05.588" level="INFO">Executing : Query  |  SELECT CLIENTS.CLIENT_ID FROM CLIENTS JOIN BALANCES ON CLIENTS.CLIENT_ID=BALANCES.CLIENTS_CLIENT_ID WHERE BALANCES.BALANCE&gt;0 ORDER BY BALANCES.BALANCE DESC LIMIT 1; </msg>
<msg timestamp="20190709 13:21:05.595" level="INFO">@{client_id_with_positive_balance} = [ (3,) ]</msg>
<status status="PASS" starttime="20190709 13:21:05.587" endtime="20190709 13:21:05.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>@{client_id_with_positive_balance}==[]</arg>
<arg>Add_rich_client</arg>
</arguments>
<status status="PASS" starttime="20190709 13:21:05.596" endtime="20190709 13:21:05.598"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>SELECT CLIENTS.CLIENT_ID FROM CLIENTS JOIN BALANCES ON CLIENTS.CLIENT_ID=BALANCES.CLIENTS_CLIENT_ID WHERE BALANCES.BALANCE&gt;0 ORDER BY BALANCES.BALANCE DESC LIMIT 1;</arg>
</arguments>
<assign>
<var>${client_id_with_positive_balance}</var>
</assign>
<msg timestamp="20190709 13:21:05.599" level="INFO">Executing : Query  |  SELECT CLIENTS.CLIENT_ID FROM CLIENTS JOIN BALANCES ON CLIENTS.CLIENT_ID=BALANCES.CLIENTS_CLIENT_ID WHERE BALANCES.BALANCE&gt;0 ORDER BY BALANCES.BALANCE DESC LIMIT 1; </msg>
<msg timestamp="20190709 13:21:05.600" level="INFO">${client_id_with_positive_balance} = [(3,)]</msg>
<status status="PASS" starttime="20190709 13:21:05.599" endtime="20190709 13:21:05.600"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>SELECT BALANCES.BALANCE FROM CLIENTS JOIN BALANCES ON CLIENTS.CLIENT_ID=BALANCES.CLIENTS_CLIENT_ID WHERE BALANCES.BALANCE&gt;0 ORDER BY BALANCES.BALANCE DESC LIMIT 1;</arg>
</arguments>
<assign>
<var>${initial_client_balance}</var>
</assign>
<msg timestamp="20190709 13:21:05.602" level="INFO">Executing : Query  |  SELECT BALANCES.BALANCE FROM CLIENTS JOIN BALANCES ON CLIENTS.CLIENT_ID=BALANCES.CLIENTS_CLIENT_ID WHERE BALANCES.BALANCE&gt;0 ORDER BY BALANCES.BALANCE DESC LIMIT 1; </msg>
<msg timestamp="20190709 13:21:05.603" level="INFO">${initial_client_balance} = [(3.5,)]</msg>
<status status="PASS" starttime="20190709 13:21:05.601" endtime="20190709 13:21:05.604"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${client_id_with_positive_balance[0][0]}</arg>
</arguments>
<assign>
<var>${client_id_with_positive_balance_clean}</var>
</assign>
<msg timestamp="20190709 13:21:05.606" level="INFO">${client_id_with_positive_balance_clean} = 3</msg>
<status status="PASS" starttime="20190709 13:21:05.605" endtime="20190709 13:21:05.606"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${initial_client_balance[0][0]}</arg>
</arguments>
<assign>
<var>${initial_client_balance_clean}</var>
</assign>
<msg timestamp="20190709 13:21:05.609" level="INFO">${initial_client_balance_clean} = 3.5</msg>
<status status="PASS" starttime="20190709 13:21:05.607" endtime="20190709 13:21:05.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>initial client balance is: ${initial_client_balance_clean}</arg>
</arguments>
<msg timestamp="20190709 13:21:05.611" level="INFO">initial client balance is: 3.5</msg>
<status status="PASS" starttime="20190709 13:21:05.610" endtime="20190709 13:21:05.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>client id is: ${client_id_with_positive_balance_clean}</arg>
</arguments>
<msg timestamp="20190709 13:21:05.613" level="INFO">client id is: 3</msg>
<status status="PASS" starttime="20190709 13:21:05.612" endtime="20190709 13:21:05.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3</arg>
</arguments>
<msg timestamp="20190709 13:21:05.614" level="INFO">Step 3</msg>
<status status="PASS" starttime="20190709 13:21:05.613" endtime="20190709 13:21:05.614"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>local_session</arg>
<arg>${Base_URL}</arg>
</arguments>
<msg timestamp="20190709 13:21:05.615" level="INFO">Creating Session using : alias=local_session, url=http://localhost:5000, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190709 13:21:05.615" endtime="20190709 13:21:05.616"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>client_id=${client_id_with_positive_balance_clean}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190709 13:21:05.620" level="INFO">${body} = {'client_id': 3}</msg>
<status status="PASS" starttime="20190709 13:21:05.617" endtime="20190709 13:21:05.620"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190709 13:21:05.621" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190709 13:21:05.621" endtime="20190709 13:21:05.622"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>local_session</arg>
<arg>/client/services</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190709 13:21:07.687" level="INFO">Post Request using : alias=local_session, uri=/client/services, data={"client_id": 3}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190709 13:21:07.688" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190709 13:21:05.622" endtime="20190709 13:21:07.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
<arg>Server sent incorrect status code</arg>
</arguments>
<msg timestamp="20190709 13:21:07.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190709 13:21:07.689" endtime="20190709 13:21:07.691"></status>
</kw>
<kw name="Get_list_of_services_from_json">
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${list_of_services_added_to_client}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads("""${source_data}""")</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${source_data}</var>
</assign>
<msg timestamp="20190709 13:21:07.695" level="INFO">${source_data} = {'count': 1, 'items': [{'cost': 1.2, 'id': 1, 'name': 'Service #1'}]}</msg>
<status status="PASS" starttime="20190709 13:21:07.694" endtime="20190709 13:21:07.695"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${source_data['items']}</arg>
</arguments>
<assign>
<var>${all_items}</var>
</assign>
<msg timestamp="20190709 13:21:07.696" level="INFO">${all_items} = [{'cost': 1.2, 'id': 1, 'name': 'Service #1'}]</msg>
<status status="PASS" starttime="20190709 13:21:07.696" endtime="20190709 13:21:07.696"></status>
</kw>
<msg timestamp="20190709 13:21:07.697" level="INFO">${list_of_services_added_to_client} = [{'cost': 1.2, 'id': 1, 'name': 'Service #1'}]</msg>
<status status="PASS" starttime="20190709 13:21:07.693" endtime="20190709 13:21:07.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4</arg>
</arguments>
<msg timestamp="20190709 13:21:07.698" level="INFO">Step 4</msg>
<status status="PASS" starttime="20190709 13:21:07.698" endtime="20190709 13:21:07.698"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>local_session</arg>
<arg>/services</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190709 13:21:09.733" level="INFO">Get Request using : alias=local_session, uri=/services, headers=None json=None</msg>
<msg timestamp="20190709 13:21:09.734" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190709 13:21:07.699" endtime="20190709 13:21:09.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
<arg>Server sent incorrect status code</arg>
</arguments>
<msg timestamp="20190709 13:21:09.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190709 13:21:09.735" endtime="20190709 13:21:09.736"></status>
</kw>
<kw name="Get_list_of_services_from_json">
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${list_of_all_serives}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads("""${source_data}""")</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${source_data}</var>
</assign>
<msg timestamp="20190709 13:21:09.744" level="INFO">${source_data} = {'count': 5, 'items': [{'cost': 1.2, 'id': 1, 'name': 'Service #1'}, {'cost': 0.35, 'id': 2, 'name': 'Service #2'}, {'cost': 0.15, 'id': 3, 'name': 'Service #3'}, {'cost': 0.15, 'id': 4, 'name': 'Serv...</msg>
<status status="PASS" starttime="20190709 13:21:09.739" endtime="20190709 13:21:09.745"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${source_data['items']}</arg>
</arguments>
<assign>
<var>${all_items}</var>
</assign>
<msg timestamp="20190709 13:21:09.745" level="INFO">${all_items} = [{'cost': 1.2, 'id': 1, 'name': 'Service #1'}, {'cost': 0.35, 'id': 2, 'name': 'Service #2'}, {'cost': 0.15, 'id': 3, 'name': 'Service #3'}, {'cost': 0.15, 'id': 4, 'name': 'Service #4'}, {'cost': 0.0...</msg>
<status status="PASS" starttime="20190709 13:21:09.745" endtime="20190709 13:21:09.745"></status>
</kw>
<msg timestamp="20190709 13:21:09.746" level="INFO">${list_of_all_serives} = [{'cost': 1.2, 'id': 1, 'name': 'Service #1'}, {'cost': 0.35, 'id': 2, 'name': 'Service #2'}, {'cost': 0.15, 'id': 3, 'name': 'Service #3'}, {'cost': 0.15, 'id': 4, 'name': 'Service #4'}, {'cost': 0.0...</msg>
<status status="PASS" starttime="20190709 13:21:09.737" endtime="20190709 13:21:09.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5</arg>
</arguments>
<msg timestamp="20190709 13:21:09.747" level="INFO">Step 5</msg>
<status status="PASS" starttime="20190709 13:21:09.747" endtime="20190709 13:21:09.747"></status>
</kw>
<kw name="Get_unadded_service">
<arguments>
<arg>${list_of_all_serives}</arg>
<arg>${list_of_services_added_to_client}</arg>
</arguments>
<assign>
<var>${unadded_service_id}</var>
<var>${unadded_service_cost}</var>
</assign>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${list_of_all_services}</arg>
</arguments>
<assign>
<var>${list_of_all_services}</var>
</assign>
<msg timestamp="20190709 13:21:09.750" level="INFO">${list_of_all_services} = [{'cost': 1.2, 'id': 1, 'name': 'Service #1'}, {'cost': 0.35, 'id': 2, 'name': 'Service #2'}, {'cost': 0.15, 'id': 3, 'name': 'Service #3'}, {'cost': 0.15, 'id': 4, 'name': 'Service #4'}, {'cost': 0.0...</msg>
<status status="PASS" starttime="20190709 13:21:09.749" endtime="20190709 13:21:09.750"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${list_of_services_added_to_client}</arg>
</arguments>
<assign>
<var>${list_of_services_added_to_client}</var>
</assign>
<msg timestamp="20190709 13:21:09.751" level="INFO">${list_of_services_added_to_client} = [{'cost': 1.2, 'id': 1, 'name': 'Service #1'}]</msg>
<status status="PASS" starttime="20190709 13:21:09.750" endtime="20190709 13:21:09.751"></status>
</kw>
<kw name="Get Unadded Service Id" library="MyKeywords">
<arguments>
<arg>${list_of_all_services}</arg>
<arg>${list_of_services_added_to_client}</arg>
</arguments>
<assign>
<var>${unadded_service_id}</var>
</assign>
<msg timestamp="20190709 13:21:09.753" level="INFO">${unadded_service_id} = 2</msg>
<status status="PASS" starttime="20190709 13:21:09.752" endtime="20190709 13:21:09.753"></status>
</kw>
<kw name="Get Unadded Service Cost" library="MyKeywords">
<arguments>
<arg>${unadded_service_id}</arg>
<arg>${list_of_all_services}</arg>
</arguments>
<assign>
<var>${unadded_service_cost}</var>
</assign>
<msg timestamp="20190709 13:21:09.754" level="INFO">${unadded_service_cost} = 0.35</msg>
<status status="PASS" starttime="20190709 13:21:09.754" endtime="20190709 13:21:09.755"></status>
</kw>
<msg timestamp="20190709 13:21:09.755" level="INFO">${unadded_service_id} = 2</msg>
<msg timestamp="20190709 13:21:09.756" level="INFO">${unadded_service_cost} = 0.35</msg>
<status status="PASS" starttime="20190709 13:21:09.748" endtime="20190709 13:21:09.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>unadded service id is: ${unadded_service_id}</arg>
</arguments>
<msg timestamp="20190709 13:21:09.758" level="INFO">unadded service id is: 2</msg>
<status status="PASS" starttime="20190709 13:21:09.757" endtime="20190709 13:21:09.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>unadded service cost is: ${unadded_service_cost}</arg>
</arguments>
<msg timestamp="20190709 13:21:09.760" level="INFO">unadded service cost is: 0.35</msg>
<status status="PASS" starttime="20190709 13:21:09.759" endtime="20190709 13:21:09.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6</arg>
</arguments>
<msg timestamp="20190709 13:21:09.761" level="INFO">Step 6</msg>
<status status="PASS" starttime="20190709 13:21:09.761" endtime="20190709 13:21:09.762"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>client_id=${client_id_with_positive_balance_clean}</arg>
<arg>service_id=${unadded_service_id}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190709 13:21:09.766" level="INFO">${body} = {'client_id': 3, 'service_id': 2}</msg>
<status status="PASS" starttime="20190709 13:21:09.763" endtime="20190709 13:21:09.766"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190709 13:21:09.768" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190709 13:21:09.767" endtime="20190709 13:21:09.768"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>local_session</arg>
<arg>/client/add_service</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190709 13:21:11.819" level="INFO">Post Request using : alias=local_session, uri=/client/add_service, data={"client_id": 3, "service_id": 2}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190709 13:21:11.819" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20190709 13:21:09.769" endtime="20190709 13:21:11.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20190709 13:21:11.823" level="INFO">Processing</msg>
<status status="PASS" starttime="20190709 13:21:11.821" endtime="20190709 13:21:11.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>Server sent incorrect status code</arg>
</arguments>
<msg timestamp="20190709 13:21:11.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190709 13:21:11.825" endtime="20190709 13:21:11.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7</arg>
</arguments>
<msg timestamp="20190709 13:21:11.827" level="INFO">Step 7</msg>
<status status="PASS" starttime="20190709 13:21:11.826" endtime="20190709 13:21:11.827"></status>
</kw>
<kw name="Check_if_service_was_added">
<arguments>
<arg>${client_id_with_positive_balance_clean}</arg>
<arg>${unadded_service_id}</arg>
</arguments>
<assign>
<var>${success}</var>
</assign>
<kw name="Check Service Added" library="MyKeywords">
<arguments>
<arg>${client_id_with_positive_balance_clean}</arg>
<arg>${unadded_service_id}</arg>
</arguments>
<assign>
<var>${success}</var>
</assign>
<msg timestamp="20190709 13:21:40.398" level="INFO">${success} = OK</msg>
<status status="PASS" starttime="20190709 13:21:11.830" endtime="20190709 13:21:40.398"></status>
</kw>
<msg timestamp="20190709 13:21:40.399" level="INFO">${success} = OK</msg>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20190709 13:21:11.829" endtime="20190709 13:21:40.399"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${success}</arg>
<arg>OK</arg>
<arg>Service was not added to the client</arg>
</arguments>
<status status="PASS" starttime="20190709 13:21:40.400" endtime="20190709 13:21:40.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 8</arg>
</arguments>
<msg timestamp="20190709 13:21:40.402" level="INFO">Step 8</msg>
<status status="PASS" starttime="20190709 13:21:40.401" endtime="20190709 13:21:40.402"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>SELECT BALANCES.BALANCE FROM CLIENTS JOIN BALANCES ON CLIENTS.CLIENT_ID=BALANCES.CLIENTS_CLIENT_ID WHERE CLIENTS.CLIENT_ID=${client_id_with_positive_balance_clean};</arg>
</arguments>
<assign>
<var>${end_client_balance}</var>
</assign>
<msg timestamp="20190709 13:21:40.404" level="INFO">Executing : Query  |  SELECT BALANCES.BALANCE FROM CLIENTS JOIN BALANCES ON CLIENTS.CLIENT_ID=BALANCES.CLIENTS_CLIENT_ID WHERE CLIENTS.CLIENT_ID=3; </msg>
<msg timestamp="20190709 13:21:40.405" level="INFO">${end_client_balance} = [(3.15,)]</msg>
<status status="PASS" starttime="20190709 13:21:40.403" endtime="20190709 13:21:40.405"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${end_client_balance[0][0]}</arg>
</arguments>
<assign>
<var>${end_client_balance_clean}</var>
</assign>
<msg timestamp="20190709 13:21:40.407" level="INFO">${end_client_balance_clean} = 3.15</msg>
<status status="PASS" starttime="20190709 13:21:40.406" endtime="20190709 13:21:40.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>end balance of the client is: ${end_client_balance_clean}</arg>
</arguments>
<msg timestamp="20190709 13:21:40.408" level="INFO">end balance of the client is: 3.15</msg>
<status status="PASS" starttime="20190709 13:21:40.408" endtime="20190709 13:21:40.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 9</arg>
</arguments>
<msg timestamp="20190709 13:21:40.410" level="INFO">Step 9</msg>
<status status="PASS" starttime="20190709 13:21:40.409" endtime="20190709 13:21:40.410"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${initial_client_balance_clean} - ${unadded_service_cost}</arg>
</arguments>
<assign>
<var>${changed_client_balance}</var>
</assign>
<msg timestamp="20190709 13:21:40.412" level="INFO">${changed_client_balance} = 3.15</msg>
<status status="PASS" starttime="20190709 13:21:40.411" endtime="20190709 13:21:40.412"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${end_client_balance_clean}</arg>
<arg>${changed_client_balance}</arg>
<arg>End client balance is not equal to difference of initial balance and service cost</arg>
</arguments>
<status status="PASS" starttime="20190709 13:21:40.413" endtime="20190709 13:21:40.414"></status>
</kw>
<status status="PASS" starttime="20190709 13:21:05.535" endtime="20190709 13:21:40.415" critical="yes"></status>
</test>
<status status="PASS" starttime="20190709 13:21:04.957" endtime="20190709 13:21:40.418"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="PyRobotTesting">PyRobotTesting</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
